services:
  rabbitmq:
    container_name: RabbitMQ
    image: rabbitmq:management
    ports:
      - "15677:15672"
    environment:
      RABBITMQ_DEFAULT_USER:
      RABBITMQ_DEFAULT_PASS:
    networks:
      - app-network
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 10s
    logging:
      driver: json-file
      options:
        max-size: 100k
        max-file: 1
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 200M

  mongodb:
    image: mongo:latest
    container_name: MongoDB
    ports:
      - "27077:27017"
    networks:
      - app-network
    volumes:
      - mongo-data:/data/db
    logging:
      driver: json-file
      options:
        max-size: 100k
        max-file: 1
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 200M

  app:
    container_name: TelegramBot
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_started
    build:
      context: ./app
      dockerfile: Dockerfile
    environment:
      DB_CONNECTION_STRING:
      AMQP_CONNECTION_STRING:
      BOT_TOKEN:
      WCI_KEY:
    networks:
      - app-network
    logging:
      driver: json-file
      options:
        max-size: 100k
        max-file: 1
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 100M

  worker:
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_started
    build:
      context: ./worker
      dockerfile: Dockerfile
    environment:
      AMQP_CONNECTION_STRING:
      DB_CONNECTION_STRING:
      API_TOKEN:
    networks:
      - app-network
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '0.2'
          memory: 200M
    logging:
      driver: json-file
      options:
        max-size: 100k
        max-file: 1
    restart: always

networks:
  app-network:
    driver: bridge

volumes:
  mongo-data:
